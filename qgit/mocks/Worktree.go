// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	qgit "gitpkg/qgit"

	mock "github.com/stretchr/testify/mock"
)

// Worktree is an autogenerated mock type for the Worktree type
type Worktree struct {
	mock.Mock
}

// Checkout provides a mock function with given fields: opts
func (_m *Worktree) Checkout(opts *qgit.QRepoCheckoutOptions) error {
	ret := _m.Called(opts)

	if len(ret) == 0 {
		panic("no return value specified for Checkout")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*qgit.QRepoCheckoutOptions) error); ok {
		r0 = rf(opts)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewWorktree creates a new instance of Worktree. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewWorktree(t interface {
	mock.TestingT
	Cleanup(func())
}) *Worktree {
	mock := &Worktree{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
