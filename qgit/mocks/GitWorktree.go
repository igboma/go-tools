// Code generated by mockery v2.45.0. DO NOT EDIT.

package mocks

import (
	"gitpkg/qgit"

	mock "github.com/stretchr/testify/mock"
)

// GitWorktree is an autogenerated mock type for the GitWorktree type
type GitWorktree struct {
	mock.Mock
}

// Checkout provides a mock function with given fields: opts
func (_m *GitWorktree) Checkout(opts *qgit.QgitCheckoutOptions) error {
	ret := _m.Called(opts)

	if len(ret) == 0 {
		panic("no return value specified for Checkout")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*qgit.QgitCheckoutOptions) error); ok {
		r0 = rf(opts)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewGitWorktree creates a new instance of GitWorktree. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewGitWorktree(t interface {
	mock.TestingT
	Cleanup(func())
}) *GitWorktree {
	mock := &GitWorktree{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
